"use strict";(self.webpackChunkstryker_mutator_github_io=self.webpackChunkstryker_mutator_github_io||[]).push([[5792],{3905:function(t,e,r){r.d(e,{Zo:function(){return l},kt:function(){return m}});var n=r(7294);function o(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function a(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?a(Object(r),!0).forEach((function(e){o(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function u(t,e){if(null==t)return{};var r,n,o=function(t,e){if(null==t)return{};var r,n,o={},a=Object.keys(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||(o[r]=t[r]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(o[r]=t[r])}return o}var c=n.createContext({}),s=function(t){var e=n.useContext(c),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},l=function(t){var e=s(t.components);return n.createElement(c.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},y=n.forwardRef((function(t,e){var r=t.components,o=t.mdxType,a=t.originalType,c=t.parentName,l=u(t,["components","mdxType","originalType","parentName"]),y=s(r),m=o,f=y["".concat(c,".").concat(m)]||y[m]||p[m]||a;return r?n.createElement(f,i(i({ref:e},l),{},{components:r})):n.createElement(f,i({ref:e},l))}));function m(t,e){var r=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=r.length,i=new Array(a);i[0]=y;var u={};for(var c in e)hasOwnProperty.call(e,c)&&(u[c]=e[c]);u.originalType=t,u.mdxType="string"==typeof t?t:o,i[1]=u;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},1099:function(t,e,r){r.r(e),r.d(e,{frontMatter:function(){return a},contentTitle:function(){return i},metadata:function(){return u},assets:function(){return c},toc:function(){return s},default:function(){return p}});var n=r(7462),o=(r(7294),r(3905));const a={slug:"happy-new-stryker",title:"Happy new Stryker!",author:"Nico Jansen",author_title:"Stryker Team",author_url:"https://github.com/nicojs",author_image_url:"https://avatars3.githubusercontent.com/u/1828233?s=400&u=fec18ad3776aaafec54c49bbd7173a841ae7ea59&v=4",tags:["stryker"]},i=void 0,u={permalink:"/blog/happy-new-stryker",editUrl:"https://github.com/stryker-mutator/stryker-mutator.github.io/edit/develop/blog/2017-01-01-happy-new-stryker.md",source:"@site/blog/2017-01-01-happy-new-stryker.md",title:"Happy new Stryker!",description:"2017 - The year to invest into test quality",date:"2017-01-01T00:00:00.000Z",formattedDate:"January 1, 2017",tags:[{label:"stryker",permalink:"/blog/tags/stryker"}],readingTime:2.855,truncated:!0,authors:[{name:"Nico Jansen",title:"Stryker Team",url:"https://github.com/nicojs",imageURL:"https://avatars3.githubusercontent.com/u/1828233?s=400&u=fec18ad3776aaafec54c49bbd7173a841ae7ea59&v=4"}],prevItem:{title:"Introduction to mutation testing",permalink:"/blog/introduction-to-mutation-testing"},nextItem:{title:"Stryker 0.5.5 released!",permalink:"/blog/stryker-0-5-5"}},c={authorsImageUrls:[void 0]},s=[{value:"2017 - The year to invest into test quality",id:"2017---the-year-to-invest-into-test-quality",children:[],level:2}],l={toc:s};function p({components:t,...e}){return(0,o.kt)("wrapper",(0,n.Z)({},l,e,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"2017---the-year-to-invest-into-test-quality"},"2017 - The year to invest into test quality"),(0,o.kt)("p",null,"Up until now, when you were writing unit tests, you were actually investing in ",(0,o.kt)("em",{parentName:"p"},"code quality"),". Catching bugs early by continuously\nexercising your code with unit tests and keeping your stakeholders happy by presenting them with a code coverage number of 85% or higher.\nBut does code coverage tell the entire story? Are your tests actually able to detect bugs? How do you test ",(0,o.kt)("em",{parentName:"p"},"your tests"),"?\nThat's the problem ",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Mutation_testing"},"mutation testing")," sets out to solve."))}p.isMDXComponent=!0}}]);